/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.106
 * Generated at: 2025-07-04 05:04:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class viewprinters_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>View Printers - TechParts</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Segoe UI', sans-serif;\r\n");
      out.write("            background-color: #f9fafb;\r\n");
      out.write("            padding: 40px;\r\n");
      out.write("        }\r\n");
      out.write("        h2 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #222;\r\n");
      out.write("        }\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("        }\r\n");
      out.write("        th, td {\r\n");
      out.write("            padding: 12px 15px;\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            vertical-align: middle;\r\n");
      out.write("        }\r\n");
      out.write("        th {\r\n");
      out.write("            background-color:  #111827;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        tr:nth-child(even) {\r\n");
      out.write("            background-color: #f2f2f2;\r\n");
      out.write("        }\r\n");
      out.write("        a {\r\n");
      out.write("            color: #0066cc;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("        a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("        img {\r\n");
      out.write("            max-width: 100px;\r\n");
      out.write("            height: auto;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        .add-button {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            width: 150px;\r\n");
      out.write("            margin: 0 10px 20px 0;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            background-color: #0066cc;\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            border-radius: 6px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            transition: background-color 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .add-button:hover {\r\n");
      out.write("            background-color: #004d99;\r\n");
      out.write("        }\r\n");
      out.write("        .btn {\r\n");
      out.write("            padding: 6px 12px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-edit {\r\n");
      out.write("            background-color: #10b981;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-edit:hover {\r\n");
      out.write("            background-color: #059669;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-delete {\r\n");
      out.write("            background-color: #ef4444;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-delete:hover {\r\n");
      out.write("            background-color: #dc2626;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-back {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            background-color: #6b7280; /* Gray-600 */\r\n");
      out.write("            color: white;\r\n");
      out.write("            border-radius: 6px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            transition: background-color 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-back:hover {\r\n");
      out.write("            background-color: #4b5563; /* Gray-700 */\r\n");
      out.write("        }\r\n");
      out.write("        .top-buttons {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<h2>Printer List</h2>\r\n");
      out.write("\r\n");
      out.write("<div class=\"top-buttons\">\r\n");
      out.write("    <a href=\"Categories.jsp\" class=\"btn-back\">‚Üê Back to Categories</a>\r\n");
      out.write("    <a href=\"AddPrinter.jsp\" class=\"add-button\">Add New Printer</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <th>ID</th>\r\n");
      out.write("        <th>Model Name</th>\r\n");
      out.write("        <th>Item Code</th>\r\n");
      out.write("        <th>Brand</th>\r\n");
      out.write("        <th>Type</th>\r\n");
      out.write("        <th>Price (LKR)</th>\r\n");
      out.write("        <th>Cash Price (LKR)</th>\r\n");
      out.write("        <th>Status</th>\r\n");
      out.write("        <th>Description</th>\r\n");
      out.write("        <th>Image</th>\r\n");
      out.write("        <th>Actions</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("\r\n");
      out.write("    ");

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/computer", "root", "ishini2003");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM printers");

            while (rs.next()) {
    
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>");
      out.print( rs.getInt("id") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("model_name") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("item_code") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("brand") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("type") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( String.format("%.2f", rs.getDouble("price")) );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( String.format("%.2f", rs.getDouble("cash_price")) );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("status") );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( rs.getString("description") );
      out.write("</td>\r\n");
      out.write("            <td>\r\n");
      out.write("                ");

                    String imgUrl = rs.getString("image_url");
                    if (imgUrl != null && !imgUrl.trim().isEmpty()) {
                
      out.write("\r\n");
      out.write("                    <img src=\"");
      out.print( imgUrl );
      out.write("\" alt=\"Printer Image\" />\r\n");
      out.write("                ");

                    } else {
                
      out.write("\r\n");
      out.write("                    No Image\r\n");
      out.write("                ");

                    }
                
      out.write("\r\n");
      out.write("            </td>\r\n");
      out.write("            <td>\r\n");
      out.write("                <a href=\"editprinter.jsp?id=");
      out.print( rs.getInt("id") );
      out.write("\" class=\"btn btn-edit\">Edit</a> |\r\n");
      out.write("                <a href=\"DeletePrinterServlet?id=");
      out.print( rs.getInt("id") );
      out.write("\" class=\"btn btn-delete\" onclick=\"return confirm('Are you sure you want to delete this printer?');\">Delete</a>\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("    ");

            }
            con.close();
        } catch (Exception e) {
            out.println("<tr><td colspan='11'>Error: " + e.getMessage() + "</td></tr>");
        }
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
