/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.106
 * Generated at: 2025-07-02 06:15:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class Editpart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    String idStr = request.getParameter("id");
    int id = 0;
    if(idStr != null) {
        id = Integer.parseInt(idStr);
    } else {
        response.sendRedirect("Viewpart.jsp"); // Redirect if no id provided
        return;
    }

    String partName = "";
    String category = "";
    String supplier = "";
    int quantity = 0;
    int minStock = 0;
    double price = 0.0;

    try {
        Class.forName("com.mysql.jdbc.Driver");
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/computer", "root", "ishini2003");
        String sql = "SELECT part_name, category, supplier, quantity, min_stock, price FROM parts WHERE id = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setInt(1, id);
        ResultSet rs = pstmt.executeQuery();
        if(rs.next()) {
            partName = rs.getString("part_name");
            category = rs.getString("category");
            supplier = rs.getString("supplier");
            quantity = rs.getInt("quantity");
            minStock = rs.getInt("min_stock");
            price = rs.getDouble("price");
        } else {
            response.sendRedirect("Viewpart.jsp"); // Redirect if id not found
            return;
        }
        rs.close();
        pstmt.close();
        conn.close();
    } catch(Exception e) {
        out.println("<p style='color:red;'>Error loading part data: " + e.getMessage() + "</p>");
    }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <title>Edit Part - TechParts</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Segoe UI', sans-serif;\r\n");
      out.write("            background-color: #f5f7fa;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("        form {\r\n");
      out.write("            background: white;\r\n");
      out.write("            padding: 25px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            max-width: 500px;\r\n");
      out.write("            margin: auto;\r\n");
      out.write("            box-shadow: 0 6px 18px rgba(0,0,0,0.1);\r\n");
      out.write("        }\r\n");
      out.write("        label {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin-bottom: 8px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("        }\r\n");
      out.write("        input[type=\"text\"],\r\n");
      out.write("        input[type=\"number\"],\r\n");
      out.write("        input[type=\"decimal\"] {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px 12px;\r\n");
      out.write("            margin-bottom: 18px;\r\n");
      out.write("            border-radius: 6px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("        }\r\n");
      out.write("        button {\r\n");
      out.write("            background-color: #65a30d;\r\n");
      out.write("            border: none;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 12px 20px;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            border-radius: 6px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        button:hover {\r\n");
      out.write("            background-color: #4d7c0f;\r\n");
      out.write("        }\r\n");
      out.write("        a {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            margin-top: 15px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: #4c5c7a;\r\n");
      out.write("        }\r\n");
      out.write("        a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h2 style=\"text-align:center;\">Edit Part</h2>\r\n");
      out.write("    <form action=\"UpdatePartServlet\" method=\"post\">\r\n");
      out.write("        <input type=\"hidden\" name=\"id\" value=\"");
      out.print( id );
      out.write("\"/>\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"part_name\">Part Name:</label>\r\n");
      out.write("        <input type=\"text\" id=\"part_name\" name=\"part_name\" required value=\"");
      out.print( partName );
      out.write("\" />\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"category\">Category:</label>\r\n");
      out.write("        <input type=\"text\" id=\"category\" name=\"category\" required value=\"");
      out.print( category );
      out.write("\" />\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"supplier\">Supplier:</label>\r\n");
      out.write("        <input type=\"text\" id=\"supplier\" name=\"supplier\" required value=\"");
      out.print( supplier );
      out.write("\" />\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"quantity\">Quantity:</label>\r\n");
      out.write("        <input type=\"number\" id=\"quantity\" name=\"quantity\" required min=\"0\" value=\"");
      out.print( quantity );
      out.write("\" />\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"min_stock\">Minimum Stock:</label>\r\n");
      out.write("        <input type=\"number\" id=\"min_stock\" name=\"min_stock\" required min=\"0\" value=\"");
      out.print( minStock );
      out.write("\" />\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"price\">Price ($):</label>\r\n");
      out.write("        <input type=\"text\" id=\"price\" name=\"price\" required pattern=\"^\\d+(\\.\\d{1,2})?$\" title=\"Enter a valid price with up to 2 decimals\" value=\"");
      out.print( price );
      out.write("\" />\r\n");
      out.write("        \r\n");
      out.write("        <button type=\"submit\">Update Part</button>\r\n");
      out.write("    </form>\r\n");
      out.write("    <div style=\"text-align:center;\">\r\n");
      out.write("        <a href=\"ViewPart.jsp\">Back to Parts List</a>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
