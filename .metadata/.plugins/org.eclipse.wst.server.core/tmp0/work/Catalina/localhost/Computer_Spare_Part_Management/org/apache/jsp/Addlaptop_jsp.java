/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.106
 * Generated at: 2025-07-03 05:59:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Addlaptop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <title>Add Laptop</title>\r\n");
      out.write("  <style>\r\n");
      out.write("    body {\r\n");
      out.write("      font-family: Arial;\r\n");
      out.write("      background-color: #f4f4f4;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    form {\r\n");
      out.write("      background: #fff;\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      margin: 50px auto;\r\n");
      out.write("      width: 500px;\r\n");
      out.write("      border-radius: 8px;\r\n");
      out.write("      box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    label {\r\n");
      out.write("      display: block;\r\n");
      out.write("      margin-top: 10px;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input, select {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      padding: 10px;\r\n");
      out.write("      margin-top: 5px;\r\n");
      out.write("      border: 1px solid #ccc;\r\n");
      out.write("      border-radius: 4px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button {\r\n");
      out.write("      margin-top: 20px;\r\n");
      out.write("      padding: 10px 20px;\r\n");
      out.write("      background: #111827;\r\n");
      out.write("      color: white;\r\n");
      out.write("      border: none;\r\n");
      out.write("      border-radius: 4px;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button:hover {\r\n");
      out.write("      background: #1e293b;\r\n");
      out.write("    }\r\n");
      out.write("     a.back-btn {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("            padding: 8px 14px;\r\n");
      out.write("            background-color: #6b7280;\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            border-radius: 6px;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a.back-btn:hover {\r\n");
      out.write("            background-color: #4b5563;\r\n");
      out.write("        }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <a href=\"ManagerDashboard.jsp\" class=\"back-btn\"> Back</a>\r\n");
      out.write("  <form action=\"AddLaptopServlet\" method=\"post\">\r\n");
      out.write("    <h2>Add New Laptop</h2>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"brand\">Brand</label>\r\n");
      out.write("    <input type=\"text\" name=\"brand\" id=\"brand\" placeholder=\"Brand\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"model\">Model</label>\r\n");
      out.write("    <input type=\"text\" name=\"model\" id=\"model\" placeholder=\"Model\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"cpu\">Processor (CPU)</label>\r\n");
      out.write("    <input type=\"text\" name=\"cpu\" id=\"cpu\" placeholder=\"Processor (CPU)\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"gpu\">Graphics (GPU)</label>\r\n");
      out.write("    <input type=\"text\" name=\"gpu\" id=\"gpu\" placeholder=\"Graphics (GPU)\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"ram\">RAM</label>\r\n");
      out.write("    <input type=\"text\" name=\"ram\" id=\"ram\" placeholder=\"RAM\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"storage\">Storage</label>\r\n");
      out.write("    <input type=\"text\" name=\"storage\" id=\"storage\" placeholder=\"Storage\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"display\">Display</label>\r\n");
      out.write("    <input type=\"text\" name=\"display\" id=\"display\" placeholder=\"Display\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"item_code\">Item Code</label>\r\n");
      out.write("    <input type=\"text\" name=\"item_code\" id=\"item_code\" placeholder=\"Item Code\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"price\">Price (Rs.)</label>\r\n");
      out.write("    <input type=\"number\" name=\"price\" id=\"price\" placeholder=\"Price\" step=\"0.01\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"cash_price\">Cash Price (Rs.)</label>\r\n");
      out.write("    <input type=\"number\" name=\"cash_price\" id=\"cash_price\" placeholder=\"Cash Price\" step=\"0.01\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"image_url\">Image URL</label>\r\n");
      out.write("    <input type=\"text\" name=\"image_url\" id=\"image_url\" placeholder=\"Image URL\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"stock_status\">Stock Status</label>\r\n");
      out.write("    <select name=\"stock_status\" id=\"stock_status\">\r\n");
      out.write("      <option value=\"In Stock\">In Stock</option>\r\n");
      out.write("      <option value=\"Low Stock\">Low Stock</option>\r\n");
      out.write("      <option value=\"Out of Stock\">Out of Stock</option>\r\n");
      out.write("    </select>\r\n");
      out.write("\r\n");
      out.write("    <button type=\"submit\">Add Laptop</button>\r\n");
      out.write("  </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
