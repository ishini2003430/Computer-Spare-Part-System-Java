/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.106
 * Generated at: 2025-07-03 07:33:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class EditLaptopAccess_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

    int id = Integer.parseInt(request.getParameter("id"));
    Connection conn = null;
    PreparedStatement stmt = null;
    ResultSet rs = null;

    try {
        Class.forName("com.mysql.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/computer", "root", "ishini2003");
        stmt = conn.prepareStatement("SELECT * FROM products WHERE id = ?");
        stmt.setInt(1, id);
        rs = stmt.executeQuery();
        rs.next();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Edit Product</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        form {\r\n");
      out.write("            background: white;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            max-width: 600px;\r\n");
      out.write("            margin: auto;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        input, textarea, select {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        button {\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            background: #111827;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <form action=\"UpdateLaptopAccessServlet\" method=\"post\">\r\n");
      out.write("        <h2>Edit Product</h2>\r\n");
      out.write("\r\n");
      out.write("        <input type=\"hidden\" name=\"id\" value=\"");
      out.print( rs.getInt("id") );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("        <label>Name:</label>\r\n");
      out.write("        <input type=\"text\" name=\"name\" value=\"");
      out.print( rs.getString("name") );
      out.write("\" required>\r\n");
      out.write("\r\n");
      out.write("        <label>Category:</label>\r\n");
      out.write("        <input type=\"text\" name=\"category\" value=\"");
      out.print( rs.getString("category") );
      out.write("\" required>\r\n");
      out.write("\r\n");
      out.write("        <label>Item Code:</label>\r\n");
      out.write("        <input type=\"text\" name=\"item_code\" value=\"");
      out.print( rs.getString("item_code") );
      out.write("\" required>\r\n");
      out.write("\r\n");
      out.write("        <label>Price:</label>\r\n");
      out.write("        <input type=\"number\" step=\"0.01\" name=\"price\" value=\"");
      out.print( rs.getDouble("price") );
      out.write("\" required>\r\n");
      out.write("\r\n");
      out.write("        <label>Cash Price:</label>\r\n");
      out.write("        <input type=\"number\" step=\"0.01\" name=\"cash_price\" value=\"");
      out.print( rs.getDouble("cash_price") );
      out.write("\" required>\r\n");
      out.write("\r\n");
      out.write("        <label>Stock Status:</label>\r\n");
      out.write("        <select name=\"stock_status\">\r\n");
      out.write("            <option ");
      out.print( rs.getString("stock_status").equals("In Stock") ? "selected" : "" );
      out.write(">In Stock</option>\r\n");
      out.write("            <option ");
      out.print( rs.getString("stock_status").equals("Low Stock") ? "selected" : "" );
      out.write(">Low Stock</option>\r\n");
      out.write("            <option ");
      out.print( rs.getString("stock_status").equals("Out of Stock") ? "selected" : "" );
      out.write(">Out of Stock</option>\r\n");
      out.write("        </select>\r\n");
      out.write("\r\n");
      out.write("        <label>Image URL:</label>\r\n");
      out.write("        <input type=\"text\" name=\"image_url\" value=\"");
      out.print( rs.getString("image_url") );
      out.write("\" required>\r\n");
      out.write("\r\n");
      out.write("        <label>Description:</label>\r\n");
      out.write("        <textarea name=\"description\">");
      out.print( rs.getString("description") );
      out.write("</textarea>\r\n");
      out.write("\r\n");
      out.write("        <button type=\"submit\">Update Product</button>\r\n");
      out.write("    </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");

    conn.close();
    } catch(Exception e) {
        out.print("Error: " + e.getMessage());
    }

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
