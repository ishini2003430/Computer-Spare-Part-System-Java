/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.106
 * Generated at: 2025-07-02 06:43:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.net.URLDecoder;
import java.util.*;

public final class CategoryDetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.net.URLDecoder");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    String categoryParam = request.getParameter("category");
    String category = categoryParam != null ? URLDecoder.decode(categoryParam, "UTF-8") : "";

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>");
      out.print( category );
      out.write(" Parts - TechParts</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Segoe UI', sans-serif;\r\n");
      out.write("            background-color: #f3f4f6;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 40px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #2e3b4e;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .table-container {\r\n");
      out.write("            background: white;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            padding: 25px;\r\n");
      out.write("            box-shadow: 0 6px 18px rgba(0,0,0,0.1);\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table thead {\r\n");
      out.write("            background-color: #2e3b4e;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table th, table td {\r\n");
      out.write("            padding: 12px 15px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            border-bottom: 1px solid #ddd;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table tbody tr:hover {\r\n");
      out.write("            background-color: #f1f5f9;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-icon {\r\n");
      out.write("            background: none;\r\n");
      out.write("            border: none;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            padding: 5px;\r\n");
      out.write("            margin-right: 5px;\r\n");
      out.write("            vertical-align: middle;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-icon svg {\r\n");
      out.write("            width: 18px;\r\n");
      out.write("            height: 18px;\r\n");
      out.write("            fill: #4c5c7a;\r\n");
      out.write("            transition: fill 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-icon.edit:hover svg {\r\n");
      out.write("            fill: #4caf50;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-icon.delete:hover svg {\r\n");
      out.write("            fill: #e74c3c;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-link {\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("            display: block;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-link a {\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: #1f2937;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-link a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<h1>Parts in \"");
      out.print( category );
      out.write("\" Category</h1>\r\n");
      out.write("\r\n");
      out.write("<div class=\"table-container\">\r\n");
      out.write("    <table>\r\n");
      out.write("        <thead>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>Part Name</th>\r\n");
      out.write("            <th>Supplier</th>\r\n");
      out.write("            <th>Quantity</th>\r\n");
      out.write("            <th>Min Stock</th>\r\n");
      out.write("            <th>Price ($)</th>\r\n");
      out.write("            <th>Status</th>\r\n");
      out.write("            <th>Actions</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>\r\n");
      out.write("        ");

            Connection conn = null;
            PreparedStatement pstmt = null;
            ResultSet rs = null;

            try {
                Class.forName("com.mysql.jdbc.Driver");
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/computer", "root", "ishini2003");

                String sql = "SELECT * FROM parts WHERE category = ?";
                pstmt = conn.prepareStatement(sql);
                pstmt.setString(1, category);
                rs = pstmt.executeQuery();

                while (rs.next()) {
                    int id = rs.getInt("id");
                    String partName = rs.getString("part_name");
                    String supplier = rs.getString("supplier");
                    int quantity = rs.getInt("quantity");
                    int minStock = rs.getInt("min_stock");
                    double price = rs.getDouble("price");
                    String status = (quantity <= minStock) ? "Low Stock" : "In Stock";
        
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>");
      out.print( partName );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( supplier );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( quantity );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( minStock );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( String.format("%.2f", price) );
      out.write("</td>\r\n");
      out.write("            <td style=\"color:");
      out.print( status.equals("Low Stock") ? "#e74c3c" : "#65a30d" );
      out.write(';');
      out.write('"');
      out.write('>');
      out.print( status );
      out.write("</td>\r\n");
      out.write("            <td>\r\n");
      out.write("                <a href=\"Editpart.jsp?id=");
      out.print(id);
      out.write("\" class=\"btn-icon edit\" title=\"Edit\">\r\n");
      out.write("                    <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n");
      out.write("                        <path d=\"M3 17.25V21h3.75l11.06-11.06-3.75-3.75L3 17.25zM21.41 6.34a1.25 1.25 0 0 0 0-1.77l-2-2a1.25 1.25 0 0 0-1.77 0l-1.83 1.83 3.75 3.75 1.85-1.81z\"/>\r\n");
      out.write("                    </svg>\r\n");
      out.write("                </a>\r\n");
      out.write("                <a href=\"DeletePartServlet?id=");
      out.print(id);
      out.write("\" class=\"btn-icon delete\" title=\"Delete\"\r\n");
      out.write("                   onclick=\"return confirm('Are you sure you want to delete this part?');\">\r\n");
      out.write("                    <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n");
      out.write("                        <path d=\"M3 6h18v2H3V6zm2 3h14v12a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V9zm3-5h6v2H8V4z\"/>\r\n");
      out.write("                    </svg>\r\n");
      out.write("                </a>\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");

                }
            } catch (Exception e) {
                out.println("<tr><td colspan='7' style='color:red;'>Error: " + e.getMessage() + "</td></tr>");
            } finally {
                try { if (rs != null) rs.close(); } catch (Exception ignore) {}
                try { if (pstmt != null) pstmt.close(); } catch (Exception ignore) {}
                try { if (conn != null) conn.close(); } catch (Exception ignore) {}
            }
        
      out.write("\r\n");
      out.write("        </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"back-link\">\r\n");
      out.write("    <a href=\"Categories.jsp\">← Back to Categories</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
