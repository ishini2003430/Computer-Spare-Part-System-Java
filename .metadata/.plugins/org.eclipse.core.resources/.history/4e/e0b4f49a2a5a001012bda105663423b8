package ComputerPackage;

import java.io.IOException;
import java.sql.*;
import java.util.List;
import javax.servlet.*;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;

@WebServlet("/PlaceOrderServlet")

public class PlaceOrderServlet extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // Get user input
        String name = request.getParameter("name");
        String email = request.getParameter("email");
        String phone = request.getParameter("phone");
        String address = request.getParameter("address");
        double total = Double.parseDouble(request.getParameter("total"));

        // Get cart from session
        HttpSession session = request.getSession();
        List<CartItem> cart = (List<CartItem>) session.getAttribute("cart");

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/computer", "root", "ishini2003");

            // Insert order into orders table
            String orderSQL = "INSERT INTO orders (name, email, phone, address, total_amount) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(orderSQL, Statement.RETURN_GENERATED_KEYS);
            ps.setString(1, name);
            ps.setString(2, email);
            ps.setString(3, phone);
            ps.setString(4, address);
            ps.setDouble(5, total);
            ps.executeUpdate();

            // Get the generated order ID
            ResultSet generatedKeys = ps.getGeneratedKeys();
            int orderId = 0;
            if (generatedKeys.next()) {
                orderId = generatedKeys.getInt(1);
            }

            // Insert each item into order_items table
            if (cart != null && orderId != 0) {
                String itemSQL = "INSERT INTO order_items (order_id, product_id, product_name, price, quantity) VALUES (?, ?, ?, ?, ?)";
                PreparedStatement itemPs = conn.prepareStatement(itemSQL);
                for (CartItem item : cart) {
                    itemPs.setInt(1, orderId);
                    itemPs.setInt(2, item.getId());
                    itemPs.setString(3, item.getName());
                    itemPs.setDouble(4, item.getPrice());
                    itemPs.setInt(5, item.getQuantity());
                    itemPs.executeUpdate();
                }
            }

            // Clear cart session
            session.removeAttribute("cart");

            // Redirect to confirmation page
            response.sendRedirect("OrderSuccess.jsp");

            conn.close();

        } catch (Exception e) {
            e.printStackTrace();
            response.getWriter().println("Error: " + e.getMessage());
        }
    }
}
