<%@ page import="java.sql.*" %>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>Reports - TechParts</title>

    <!-- Chart.js CDN for charts -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            background-color: #f9fafb;
            margin: 0;
            display: flex;
            min-height: 100vh;
        }
        .sidebar {
            width: 220px;
            background-color: #111827;
            color: white;
            padding: 2rem 1rem;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
        .sidebar h2 {
            font-size: 1.5rem;
            text-align: center;
            margin-bottom: 2rem;
            font-weight: bold;
        }
        .nav-link {
            color: #d1d5db;
            padding: 10px 15px;
            display: block;
            text-decoration: none;
            border-radius: 8px;
            margin-bottom: 8px;
            transition: background 0.3s, color 0.3s;
        }
        .nav-link:hover,
        .nav-link.active {
            background-color: #1e40af;
            color: white;
        }
        .logout-btn {
            width: 100%;
            padding: 10px;
            background-color: #ef4444;
            border: none;
            border-radius: 8px;
            color: white;
            font-weight: 600;
            text-align: center;
            text-decoration: none;
            cursor: pointer;
        }
        .main {
            flex: 1;
            padding: 2rem;
            overflow-y: auto;
        }
        h1 {
            margin-bottom: 20px;
            color: #111827;
        }
        .metrics {
            display: flex;
            gap: 2rem;
            margin-bottom: 2rem;
        }
        .metric-box {
            background: white;
            padding: 1.5rem 2rem;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgb(0 0 0 / 0.06);
            flex: 1;
            text-align: center;
        }
        .metric-box h2 {
            font-size: 2.5rem;
            margin: 0;
            color: #2563eb;
        }
        .metric-box p {
            margin-top: 0.5rem;
            font-weight: 600;
            color: #6b7280;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 12px rgb(0 0 0 / 0.06);
            margin-bottom: 2rem;
        }
        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #e5e7eb;
        }
        th {
            background-color: #f3f4f6;
            font-weight: 600;
        }
        tr:hover {
            background-color: #f1f5f9;
        }
        h2.section-title {
            margin-top: 2rem;
            margin-bottom: 1rem;
            color: #111827;
        }
        /* Chart container */
        .chart-container {
            background: white;
            padding: 2rem;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgb(0 0 0 / 0.06);
        }
    </style>
</head>
<body>

<!-- Sidebar -->
<div class="sidebar">
    <div>
        <h2>TechParts</h2>
        <a href="ManagerDashboard.jsp" class="nav-link">Dashboard</a>
        <a href="Categories.jsp" class="nav-link">Categories</a>
        <a href="SupplierDetails.jsp" class="nav-link">Suppliers</a>
        <a href="ViewOrderDetails.jsp" class="nav-link">Orders</a>
        <a href="SalesDetails.jsp" class="nav-link">Sales</a>
        <a href="Reports.jsp" class="nav-link active">Reports</a>
        <a href="#" class="nav-link">Settings</a>
    </div>
    <a href="Login.jsp" class="logout-btn">Logout</a>
</div>

<!-- Main Content -->
<div class="main">
    <h1>Reports Dashboard</h1>

<%
    int totalSuppliers = 0;
    int totalParts = 0;
    int totalOrders = 0;
    double totalSalesAmount = 0.0;

    // For chart data: sales per month
    // We'll query last 6 months sales total for chart
    java.util.Map<String, Double> salesByMonth = new java.util.LinkedHashMap<>();

    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rs = null;

    try {
        Class.forName("com.mysql.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/computer", "root", "ishini2003");

        // Total suppliers
        ps = conn.prepareStatement("SELECT COUNT(*) FROM suppliers");
        rs = ps.executeQuery();
        if (rs.next()) totalSuppliers = rs.getInt(1);
        rs.close();
        ps.close();

        // Total parts
        ps = conn.prepareStatement("SELECT COUNT(*) FROM parts");
        rs = ps.executeQuery();
        if (rs.next()) totalParts = rs.getInt(1);
        rs.close();
        ps.close();

        // Total orders
        ps = conn.prepareStatement("SELECT COUNT(*) FROM orders");
        rs = ps.executeQuery();
        if (rs.next()) totalOrders = rs.getInt(1);
        rs.close();
        ps.close();

        // Total sales amount
        ps = conn.prepareStatement("SELECT IFNULL(SUM(total_amount), 0) FROM orders");
        rs = ps.executeQuery();
        if (rs.next()) totalSalesAmount = rs.getDouble(1);
        rs.close();
        ps.close();

        // Prepare sales per month data for last 6 months
        ps = conn.prepareStatement(
            "SELECT DATE_FORMAT(created_at, '%Y-%m') AS month, IFNULL(SUM(total_amount), 0) AS total_sales " +
            "FROM orders " +
            "WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) " +
            "GROUP BY month ORDER BY month ASC");
        rs = ps.executeQuery();

        // Initialize last 6 months in map with 0
        java.util.Calendar cal = java.util.Calendar.getInstance();
        cal.set(java.util.Calendar.DAY_OF_MONTH, 1);
        for (int i=5; i>=0; i--) {
            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM");
            cal.add(java.util.Calendar.MONTH, -i);
            String monthStr = sdf.format(cal.getTime());
            salesByMonth.put(monthStr, 0.0);
            cal.add(java.util.Calendar.MONTH, i); // revert back
        }

        // Fill in real data from DB
        while (rs.next()) {
            String month = rs.getString("month");
            double total = rs.getDouble("total_sales");
            if (salesByMonth.containsKey(month)) {
                salesByMonth.put(month, total);
            }
        }
        rs.close();
        ps.close();
%>

    <div class="metrics">
        <div class="metric-box">
            <h2><%= totalSuppliers %></h2>
            <p>Total Suppliers</p>
        </div>
        <div class="metric-box">
            <h2><%= totalParts %></h2>
            <p>Total Parts</p>
        </div>
        <div class="metric-box">
            <h2><%= totalOrders %></h2>
            <p>Total Orders</p>
        </div>
        <div class="metric-box">
            <h2>$<%= String.format("%.2f", totalSalesAmount) %></h2>
            <p>Total Sales Amount</p>
        </div>
    </div>

    <h2 class="section-title">Recent Suppliers</h2>
    <table>
        <thead>
        <tr>
            <th>ID</th><th>Name</th><th>Email</th><th>Phone</th><th>Company</th>
        </tr>
        </thead>
        <tbody>
        <%
            ps = conn.prepareStatement("SELECT id, name, email, phone, company FROM suppliers ORDER BY id DESC LIMIT 5");
            rs = ps.executeQuery();
            while (rs.next()) {
        %>
        <tr>
            <td><%= rs.getInt("id") %></td>
            <td><%= rs.getString("name") %></td>
            <td><%= rs.getString("email") %></td>
            <td><%= rs.getString("phone") %></td>
            <td><%= rs.getString("company") %></td>
        </tr>
        <%
            }
            rs.close();
            ps.close();
        %>
        </tbody>
    </table>

    <h2 class="section-title">Recent Orders</h2>
    <table>
        <thead>
        <tr>
            <th>Order ID</th><th>Name</th><th>Email</th><th>Phone</th><th>Total Amount</th><th>Date</th>
        </tr>
        </thead>
        <tbody>
        <%
            ps = conn.prepareStatement("SELECT id, name, email, phone, total_amount, created_at FROM orders ORDER BY created_at DESC LIMIT 5");
            rs = ps.executeQuery();
            while (rs.next()) {
        %>
        <tr>
            <td><%= rs.getInt("id") %></td>
            <td><%= rs.getString("name") %></td>
            <td><%= rs.getString("email") %></td>
            <td><%= rs.getString("phone") %></td>
            <td>$<%= String.format("%.2f", rs.getDouble("total_amount")) %></td>
            <td><%= rs.getTimestamp("created_at") %></td>
        </tr>
        <%
            }
            rs.close();
            ps.close();
            conn.close();
        } catch(Exception e) {
            out.println("<p style='color:red;'>Error: " + e.getMessage() + "</p>");
        }
    %>
        </tbody>
    </table>

    <!-- Sales Chart -->
    <h2 class="section-title">Sales Last 6 Months</h2>
    <div class="chart-container">
        <canvas id="salesChart" width="800" height="400"></canvas>
    </div>

</div>

<script>
    // Prepare chart data from JSP map
    const salesData = [
        <% 
        for(java.util.Map.Entry<String, Double> entry : salesByMonth.entrySet()) {
            out.print(entry.getValue());
            if (!entry.equals(salesByMonth.entrySet().toArray()[salesByMonth.size()-1])) out.print(",");
        }
        %>
    ];
    const salesLabels = [
        <% 
        for(java.util.Map.Entry<String, Double> entry : salesByMonth.entrySet()) {
            out.print("'" + entry.getKey() + "'");
            if (!entry.equals(salesByMonth.entrySet().toArray()[salesByMonth.size()-1])) out.print(",");
        }
        %>
    ];

    const ctx = document.getElementById('salesChart').getContext('2d');
    const salesChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: salesLabels,
            datasets: [{
                label: 'Total Sales ($)',
                data: salesData,
                fill: true,
                backgroundColor: 'rgba(37, 99, 235, 0.2)',
                borderColor: 'rgba(37, 99, 235, 1)',
                borderWidth: 2,
                tension: 0.3,
                pointRadius: 5,
                pointHoverRadius: 7,
                pointBackgroundColor: 'rgba(37, 99, 235, 1)'
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>

</body>
</html>
